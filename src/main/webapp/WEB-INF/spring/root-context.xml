<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
      http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- HikariCP Config -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<!-- property: 멤버변수 설정 -->
		<!-- <property name="driverClassName" value="oracle.jdbc.OracleDriver"></property> 
			<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"></property> -->
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
		<property name="jdbcUrl"
			value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="c##food"></property>
		<property name="password" value="food"></property>
	</bean>
	<!-- hikariCP DataSource -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig"></constructor-arg><!-- hikariConfig의 
			id와 동일하게 써야 연결됨 -->
		<property name="maximumPoolSize" value="50"></property>
	</bean>

	<!-- 웬만하면 회사들이 xml로 쓴다.. 가독성 때문에 오류가 많더라도 xml을 선택하는 편 -->
	<!-- bean이 새 객체 new 하는거랑 같은 거 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property><!-- ref는 윗 bean 블록의 
			id랑 연결됨 -->
		<!-- sqlSessionFactory.setDataSource(dataSource); 와 같은 말 -->
		<!-- property는 set~~와 같은 거 -->
	</bean>

	<!-- scan을 통해서 미리 객체를 생성한다 -->
	<!-- test Scan -->
	<context:component-scan
		base-package="com.frg.test"></context:component-scan>

	<!-- Persistence Scan -->
	<mybatis-spring:scan
		base-package="com.frg.mapper" />

	<!-- Service scan -->
	<context:component-scan
		base-package="com.frg.service.*" />
</beans>
